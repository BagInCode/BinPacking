#pragma once

#include <vector>
#include "RandomGenerator.h"

struct TestDescription
{
	int tests_by_template;
	int bin_capacity;
	int item_count;
	int item_max_weight;
	int item_min_weight;
};

static std::string GenerateTestFilename(int block_id, int test_id, BaseRandomGenerator& generator)
{
	return ".\\Tests\\block" + std::to_string(block_id) + "_test" + std::to_string(test_id) + "_" + generator.getShortName() + ".txt";
}

static std::vector < TestDescription > tests = {
	//   tests_by_template, bin_capacity, item_count, item_max_weight, item_min_weight	
		{ 100,              5,            12,         5,               1              }, // 0
																						 
		{ 25,               20,           5,          20,              1              }, // 1
		{ 25,               20,           5,          15,              1              }, // 2
		{ 25,               20,           5,          10,              1              }, // 3
		{ 25,               20,           5,          15,              5              }, // 4
																						 
		{ 25,               20,           10,         20,              1              }, // 5
		{ 25,               20,           10,         15,              1              }, // 6
		{ 25,               20,           10,         10,              1              }, // 7
		{ 25,               20,           10,         15,              5              }, // 8
																						 
		{ 25,               20,           12,         20,              1              }, // 9 
		{ 25,               20,           12,         15,              1              }, // 10
		{ 25,               20,           12,         10,              1              }, // 11
		{ 25,               20,           12,         15,              5              }, // 12
																						 
		{ 25,               50,           5,          50,              1              }, // 13
		{ 25,               50,           5,          35,              1              }, // 14
		{ 25,               50,           5,          25,              1              }, // 15
		{ 25,               50,           5,          35,              15             }, // 16
																						 
		{ 25,               50,           10,         50,              1              }, // 17
		{ 25,               50,           10,         35,              1              }, // 18
		{ 25,               50,           10,         25,              1              }, // 19
		{ 25,               50,           10,         35,              15             }, // 20
																						 
		{ 25,               50,           12,         50,              1              }, // 21
		{ 25,               50,           12,         35,              1              }, // 22
		{ 25,               50,           12,         25,              1              }, // 23
		{ 25,               50,           12,         35,              15             }, // 24
																						 
		{ 25,               100,          12,         100,             1              }, // 25
		{ 25,               100,          12,         75,              1              }, // 26
		{ 25,               100,          12,         50,              1              }, // 27
		{ 25,               100,          12,         75,              25             }, // 28
																						 
		{ 100,              100,          100,        100,             1              }, // 29
		{ 100,              100,          100,        75,              1              }, // 30
		{ 100,              100,          100,        50,              1              }, // 31
		{ 100,              100,          100,        75,              25             }, // 32
																						
		{ 100,              100,          1000,       100,             1              }, // 33
		{ 100,              100,          1000,       75,              1              }, // 34
		{ 100,              100,          1000,       50,              1              }, // 35
		{ 100,              100,          1000,       75,              25             }, // 36
																						 
		{ 100,              10000,        10000,      10000,           1              }, // 37
		{ 100,              10000,        10000,      7500,            1              }, // 38
		{ 100,              10000,        10000,      5000,            1              }, // 39
		{ 100,              10000,        10000,      7500,            2500           }, // 40
																						 
		{ 100,              10000,        100000,     10000,           1              }, // 41
		{ 100,              10000,        100000,     7500,            1              }, // 42
		{ 100,              10000,        100000,     5000,            1              }, // 43
		{ 100,              10000,        100000,     7500,            2500           }, // 44
																						 
		{ 100,              1000000,      1000000,    1000000,         1              }, // 45
		{ 100,              1000000,      1000000,    750000,          1              }, // 46
		{ 100,              1000000,      1000000,    500000,          1              }, // 47
		{ 100,              1000000,      1000000,    750000,          250000         }, // 48
																						 
		{ 100,              1000000,      2000000,    1000000,         1              }, // 49
		{ 100,              1000000,      2000000,    750000,          1              }, // 50
		{ 100,              1000000,      2000000,    500000,          1              }, // 51
		{ 100,              1000000,      2000000,    750000,          250000         }, // 52
		// Total tests count for each type of destribution is 800 with count items <= 12
		//                                                    2400 with count items > 12
};